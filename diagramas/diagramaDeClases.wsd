@startuml
Juego "1" *-- "1" Tablero
Juego "1" -- "2..6" Jugador
Juego "1" *-- "*" TarjetaPais
Juego .> Moderador
Aleatorio <.Juego


Interface Mision

Mision <|.. MisionSecreta
Mision <|.. MisionNoSecreta

Tablero "1" *-- "6" Continente
Tablero "1" *-- "*" Pais
Continente "1" *-- "1..*" Pais

Jugador "1" *-- "2" Mision
Jugador "1" -- "1..*" Pais
Jugador "1" -> "*" TarjetaPais

Interface EstadoTarjetaPais

TarjetaPais --> EstadoTarjetaPais
TarjetaActivada <|.. EstadoTarjetaPais
TarjetaDesactivada <|.. EstadoTarjetaPais

Ejercito "1" --> "1" "Dados"
Tablero ..> Canjes

Pais "1" -> "1" Ejercito
Tablero -> Batalla
Batalla "1" --> "2" Pais

Pais --> Estado
Estado <|.. Vacante
Estado <|.. Ocupado

skinparam classAttributeIconSize 0
class Moderador {
 +pedirPaises()
 +pedirContinentes()
 +pedirTarjetasPais()
}

skinparam classAttributeIconSize 0
class Aleatorio {
 +repartirPaisesAleatoriamente(int cantidadJugadores, listaPaises): listaDeListaDePaises
 +elegirPosicionDelJugadorQueEmpieza(int cantidadJugadores): int posicion
}


skinparam classAttributeIconSize 0
class Juego {
 +new (listaPaises, listaContinentes, listaNombresJugadores): Juego
 +comenzarFaseInicial (Aleatorio)
 +mostrarPaisesDeCadaJugador(): diccionario
 +atacar (String paisAtacante, String paisDefensor, int cantidadEjercito)
 +colocarEjercito (String nombrePais, int cantidadEjercito)
}


skinparam classAttributeIconSize 0
class Jugador {
 -nombre: String
 -color: String
 +new(String nombre, String color, String juego): Jugador
 +getNombre(): String
 +getColor(): String
 +agregarPais(Pais)
 +buscarPais(String nombrePais): Pais
 +pedirPaises(): listaPaises
 +desocupar()
 +esElMismo(Jugador)
 +colocarEjercito(String nombrePais, int cantidadEjercito)
 +cantidadPaises(): int
}

skinparam classAttributeIconSize 0
class Tablero {
 +new (listaPaises, listaContinentes): Tablero
 +pasarPaisesAJuego(): listaPaises
 +buscarPais (String nombrePais): Pais
 +atacar(String nombrePaisAtacante, String nombrePaisDefensor, int cantidadEjercito)
 +cantidadPaises(): int
 +cantidadContinentes(): int
}

skinparam classAttributeIconSize 0
class Batalla {
 +atacar (int cantidadEjercito)
}


skinparam classAttributeIconSize 0
class Pais {
 -nombrePais: String
 -nombrePaisesLimitrofes: listaString
 +new (nombrePais,nombrePaisesLimitrofes): Pais
 +esLimitrofe (paisAtacante)
 +atacar (paisDefensa,cantidadEjercito): listaInt
 +defender(): listaInt
 +sacarFicha (int cantidad)
 +coincideNombre(String nombre): boolean
 +esElDueño(Jugador): boolean
 +establecerDueño (paisAtacante)
 +nuevoDueño(): Jugador
 +colocarEjercito (Jugador, int cantidadEjercito)
 +cantidadDeFichas(): int
 +getNombre(): String nombrePais


}

skinparam classAttributeIconSize 0
Interface Estado {
 +ocuparPais(Jugador,Pais)
}

skinparam classAttributeIconSize 0
class Ocupado {
 +ocuparPais(Jugador,Pais)
}

skinparam classAttributeIconSize 0
class Vacante {
 +ocuparPais(Jugador,Pais)
}

skinparam classAttributeIconSize 0
class Continente {
 +jugadorControlaContiente(Jugador): boolean

}

skinparam classAttributeIconSize 0
class Ejercito {
 -cantidadDeFichas: int
 +new (int cantidadFichas): Ejercito
 +sacarFicha()
 +sacarFichas (cantidad)
 +agregarFicha()
 +agregarFichas (int cantidadFichas)
 +quedoSinEjercito(): boolean
 +atacar (cantidadFichas): listaInt
 +defender(): listaInt
 +devolverCantidadDeFichas(): int

}

skinparam classAttributeIconSize 0
class Dados {
 -listaDados: listaInt
 -lanzarDados (cantidadDados): listaInt
 -ordenarDados (listaInt): listaInt
 +dadosAtaque (int cantidadDeDados): listaInt
 +dadosDefensa (int cantidadDeDados): listaInt
}


skinparam classAttributeIconSize 0
class TarjetaPais {
 -nombre: String
 -simbolo: String
 +getNombre(): String
 +getSimbolo(): String
 +activarTarjeta(Jugador)
 +activar()

}

skinparam classAttributeIconSize 0
class TarjetaActivada {
 +activarTarjeta(Jugador)
}

skinparam classAttributeIconSize 0
class TarjetaDesactivada {
 +activarTarjeta(Jugador)
}

skinparam classAttributeIconSize 0
Interface EstadoTarjetaPais {
 +activarTarjeta(Jugador)
}
@enduml