@startuml

Juego  *- Tablero
Juego "1" -- "2..6" Jugador
Juego "1" *-- "*" TarjetaPais
Juego "1" *--- "*" TarjetaObjetivo
Aleatorio <. Juego
Tablero . Jugador
Jugador "1" -> "*" TarjetaPais
Jugador -- TarjetaObjetivo

class Aleatorio {
	+ agarrarTajetaObjetivoAleatoriaDelMazo(mazoDeTarjetas): TarjetaObjetivo
	+ agarrarTajetaPaisAleatoriaDelMazo(mazoDeTarjetas): TarjetaPais
	+ elegirPosicionDelJugadorQueEmpieza(numeroDeJugadores): int
	+ repartirPaisesAleatoriamente(cantidadDeJugadores, paisesSinRepartir): List
}

class Moderador {
	+ pedirContinentes(): List
	+ pedirPaises(): List
	+ pedirTarjetasObjetivo(): List
	+ pedirTarjetasPais(): List
}

class Juego {
    - posicionJugadorEnTurno: int
    - ejercitosColocadosPorJugadorEnTurno: int
    - ejercitosColocadosEnPrimeraVuelta: int
    - ejercitosColocadosEnSegundaVuelta: int
    - mazoTarjetasPais: List
    - mazoTarjetasObjetivo: List
	+ Juego(paises, continentes, nombresDeJugadores): Juego
	+ guardarMazoDeTarjetasPais(tarjetasPais)
	+ guardarMazoDeTarjetasObjetivo(tarjetasObjetivo)
	+ comenzarFaseInicial(aleatorio)
	+ jugadorEnTurno(): Jugador
	+ pasarTurno()
	+ cumplioObjetivo(jugador): boolean
	+ entregaTarjetaPais(): TarjetaPais
	+ devolverTarjetasAlMazo(tarjetasPais)
}

class Jugador {
     - nombreJugador: String
     - color: String
     - paises: List
     - jugadorQueLoDestruyo: Jugador
     - canjes: Canjes
     - ejercitosDeCanje: int
}

class Tablero {

}

class TarjetaPais {

}

abstract class TarjetaObjetivo {

}

@enduml