@startuml

Ejercito --> "Dados"
Pais ->  Ejercito
Pais *-- EstadoPais
EstadoPais <|.. Vacante
EstadoPais <|.. Ocupado


class Pais {
	- nombrePais: String
    - nombrePaisesLimitrofes: List
    - dueño: Jugador
	+ Pais(nombrePais, nombrePaisesLimitrofes): Pais
	+ atacar(paisDefensa, cantidadEjercito): List
	+ defender()
	+ colocarEjercito(Jugador jugador, int cantidadEjercito)
	+ sacarFichas(cantidadDeFichas)
	+ esLimitrofe(pais): boolean
	+ establecerDueño(paisAtacante)
	+ nuevoDueño(): Jugador
}

class Dados {
	- listaDados: List
	+ tirarDados(cantidadDeDados): List
}

class Ejercito {
	- cantidadDeFichas: int
	+ atacar(unaCantidadFichas): List
	+ defender(): List
	+ agregarFicha()
	+ agregarFichas(unaCantidadDeFichas)
	+ sacarFicha()
	+ sacarFichas(unaCantidadDeFichas)
	+ quedoSinEjercito(): boolean
}

interface EstadoPais {
	{abstract} + ocuparPais()
}

class Vacante {
	+ ocuparPais()
}

class Ocupado {
	+ ocuparPais()
}

@enduml