@startuml
Juego "1" *-- "1" Tablero
Juego "1" -- "2..6" Jugador
Juego "1" *-- "*" TarjetaPais
Juego "1" *-- "*" TarjetaObjetivo


Tablero "1" *-- "6" Continente
Tablero "1" *-- "*" Pais
Tablero "1" -> "1" Batalla
Continente "1" *-- "1..*" Pais

Jugador "1" -- "1..*" Pais
Ejercito "1" --> "1" "Dados"


Pais "1" -> "1" Ejercito

Batalla "1" --> "2" Pais

Pais --> Estado
Estado <|.. Vacante
Estado <|.. Ocupado

TarjetaObjetivo "1" --> "1" Jugador



skinparam classAttributeIconSize 0
abstract class TarjetaObjetivo {
}



skinparam classAttributeIconSize 0
class Jugador {
}

skinparam classAttributeIconSize 0
class Tablero {
 +new (listaPaises, listaContinentes): Tablero
 +pasarPaisesAJuego(): listaPaises
 +buscarPais (String nombrePais): Pais
 +atacar(String nombrePaisAtacante, String nombrePaisDefensor, int cantidadEjercito)
 +cantidadPaises(): int
 +cantidadContinentes(): int
 +poseeUnaCantidadDePaisesEnContinente(Jugador, int cantidadDePaises, String nombreContinente): boolean
 +controlaContinente(Jugador, String nombreContinente): boolean
 +ejercitosAdicionalesPorContinentesControlados(Jugador): int
}

skinparam classAttributeIconSize 0
class Batalla {
 +atacar (int cantidadEjercito)
}


skinparam classAttributeIconSize 0
class Pais {
 -nombrePais: String
 -nombrePaisesLimitrofes: listaString
 +new (nombrePais,nombrePaisesLimitrofes): Pais
 +esLimitrofe (paisAtacante)
 +atacar (paisDefensa,cantidadEjercito): listaInt
 +defender(): listaInt
 +sacarFichas (int cantidad)
 +coincideNombre(String nombre): boolean
 +esElDueño(Jugador): boolean
 +cambiarEstadoAOcupado()
 +establecerDueño (paisAtacante)
 +nuevoDueño(): Jugador
 +colocarEjercito (Jugador, int cantidadEjercito)
 +cantidadDeFichas(): int
 +getNombre(): String nombrePais
}

skinparam classAttributeIconSize 0
Interface Estado {
 +ocuparPais(Jugador,Pais)
}

skinparam classAttributeIconSize 0
class Ocupado {
 +ocuparPais(Jugador,Pais)
}

skinparam classAttributeIconSize 0
class Vacante {
 +ocuparPais(Jugador,Pais)
}

skinparam classAttributeIconSize 0
class Continente {
 -nombre: String
 -ejercitos: int
 +new(String nombreContinente, listaPaises, int ejercitosAdicionales)
 +cantidadDePaisesControlados(Jugador): int
 +jugadorControlaContiente(Jugador): boolean
 +getNombre(): String
 +cantidadDePaises(): int
 +ejercitosAdicionalesPorContinentesControlados(Jugador,int sumaEjercitos): int
}

skinparam classAttributeIconSize 0
class Ejercito {
 -cantidadDeFichas: int
 +new (int cantidadFichas): Ejercito
 +sacarFicha()
 +sacarFichas (cantidad)
 +agregarFicha()
 +agregarFichas (int cantidadFichas)
 +quedoSinEjercito(): boolean
 +atacar (cantidadFichas): listaInt
 +defender(): listaInt
 +devolverCantidadDeFichas(): int

}

skinparam classAttributeIconSize 0
class Dados {
 -listaDados: listaInt
 +dadosAtaque (int cantidadDeDados): listaInt
 +dadosDefensa (int cantidadDeDados): listaInt

}
@enduml